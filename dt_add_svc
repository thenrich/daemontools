#!/bin/bash
SERVICE_DIR=$1
NAME=$2
RUN_SCRIPT=$3
LOG_SCRIPT=$4

SVC_DIR=/service


function abspath {
	if [[ -d "$1" ]]
	then
		pushd "$1" >/dev/null
		pwd
		popd >/dev/null
	elif [[ -e $1 ]]
	then
		pushd $(dirname $1) >/dev/null
		echo $(pwd)/$(basename $1)
		popd >/dev/null
	else
		echo $1 does not exist! >&2
		return 127
	fi
}


echo $SERVICE_DIR
echo $NAME
echo $RUN_SCRIPT
echo $LOG_SCRIPT

if [ $SERVICE_DIR = "/service" ]; then
	echo "Service dir can't be /service"
	exit
fi

if [ $NAME ]; then
	if [ ! -d $SERVICE_DIR/$NAME ]; then
		mkdir -p $SERVICE_DIR/$NAME/log
		mkdir $SERVICE_DIR/$NAME/.env
		echo "/root/.deploy" > $SERVICE_DIR/$NAME/.env/DEPLOY_ROOT
		SYMLINK_PATH=`abspath $SERVICE_DIR/$NAME`
		ln -s $SYMLINK_PATH $SVC_DIR/$NAME
	fi
	
	if [ -z "$LOG_SCRIPT" ]; then
		# Create default log script if not provided
		echo -e "#!/bin/sh\nexec multilog t ./main" > $SERVICE_DIR/$NAME/log/run
	else
		cp $LOG_SCRIPT $SERVICE_DIR/$NAME/log/run
		chmod +x $SERVICE_DIR/$NAME/log/run
	fi	

	if [ ! -z "$RUN_SCRIPT" ]; then 
		cp $RUN_SCRIPT $SERVICE_DIR/$NAME/run
		chmod +x $SERVICE_DIR/$NAME/log/run $SERVICE_DIR/$NAME/run
	fi

	if [ -e "$SVC_DIR/$NAME" ]; then	
		#wait for supervise directories to exist
		while [ ! -s $SVC_DIR/$NAME/supervise ]
		  do
		  echo "waiting for supervise directory to be created"
		  sleep 1
		done
		svc -k $SVC_DIR/$NAME
		svc -t $SVC_DIR/$NAME/log
	fi

	
fi
